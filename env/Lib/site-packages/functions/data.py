import json
import requests
from django.core.files import File 
from django.conf import settings

class datasharing(object):
    def __init__(self):
        path=settings.MEDIA_ROOT + "initial.json"

    def power(self):
        
        with open('UserInterface/files/initial.json',"r") as f:
            datafile = json.load(f)
        TriTrackPrb= datafile["TriTrackPowerBoard"]
        f.close()

        return TriTrackPrb

    def mic(self):
        
        with open('UserInterface/files/initial.json',"r") as f:
            datafile = json.load(f)
        TriTrackMic= datafile["TriTrackDataMic"]
        f.close()

        return TriTrackMic
    
    def rub(self): 
        
        with open('UserInterface/files/initial.json',"r") as f:
            datafile = json.load(f)
        Rubbish= datafile["Rubbish"]
        f.close()

        return Rubbish
    def sort(self):
        
        with open('UserInterface/files/initial.json',"r") as f:
            datafile = json.load(f)
        SortRig= datafile["SortRigPerform"]
        f.close()

        return SortRig

    def ops(self): 
        
        with open('UserInterface/files/initial.json',"r") as f:
            datafile = json.load(f)
        operation= datafile["Operation"]
        f.close()

        return operation

    def auto(self): 
        
        with open('UserInterface/files/initial.json',"r") as f:
            datafile = json.load(f)
        automation= datafile["Automation"]
        f.close()

        return automation

    def man(self): 
        
        with open('UserInterface/static/home/js/manualoperation.json',"r") as f:
            datafile = json.load(f)
        automation= datafile["Manual"]
        f.close()

        return automation

    def warn(self): 
        
        with open('UserInterface/files/initial.json',"r") as f:
            datafile = json.load(f)
        warning= datafile["Warning"]
        f.close()

        return warning


    